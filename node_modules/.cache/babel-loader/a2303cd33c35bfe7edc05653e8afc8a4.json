{"ast":null,"code":"var _jsxFileName = \"/home/zaber666/CSE 408/project/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Talks from './components/Talks';\nimport Footer from './components/Footer';\nimport LoginModal from './components/LoginModal';\nimport { useState } from \"react\";\nimport LogoutModal from './components/LogoutModal';\nimport Tests from './components/Tests';\nimport PsyHome from './components/PsyHome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const userLoggedIn = false;\n  const [showLoginModal, changeLoginModal] = useState(false);\n  const [showLogoutModal, changeLogoutModal] = useState(false);\n  const [signupModal, changeSignupModal] = useState(false);\n\n  const getSignupModal = () => {\n    changeLoginModal(false);\n    changeSignupModal(true);\n  };\n\n  const promptLogin = async loginInfo => {\n    console.log(\"Trying login\", loginInfo);\n    const res = await fetch('http://localhost:8000/login-info', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(loginInfo)\n    });\n    const data = await res.json();\n  };\n\n  const [specificTests, changeSpecificTests] = useState([{\n    id: 1,\n    testName: \"OCD Test\",\n    description: \"Suffering from obsessive thoughts of compulsive behavior? Take a tour to our OCD tests.\"\n  }, {\n    id: 2,\n    testName: \"PTSD Test\",\n    description: \"Any horrible course of events that are still terrifying you? Find out through our PTSD tests.\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changeLoginModalFn: () => changeLoginModal(true),\n      loggedIn: userLoggedIn,\n      cngLogoutModalFn: () => changeLogoutModal(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), userLoggedIn ? /*#__PURE__*/_jsxDEV(Tests, {\n      tests: specificTests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Talks, {\n      changeModalFn: () => changeLoginModal(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 60\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n      onLogin: promptLogin,\n      changeLoginModalFn: () => changeLoginModal(false),\n      cngSignupModalFn: getSignupModal,\n      isSignUp: signupModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this), showLogoutModal && /*#__PURE__*/_jsxDEV(LogoutModal, {\n      cngLogoutModalFn: () => changeLogoutModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j1wbqsDgdbFfRqsmHzNpOufKtQ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Talks","Footer","LoginModal","useState","LogoutModal","Tests","PsyHome","App","userLoggedIn","showLoginModal","changeLoginModal","showLogoutModal","changeLogoutModal","signupModal","changeSignupModal","getSignupModal","promptLogin","loginInfo","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","specificTests","changeSpecificTests","id","testName","description"],"sources":["/home/zaber666/CSE 408/project/front-end/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Talks from './components/Talks';\nimport Footer from './components/Footer';\nimport LoginModal from './components/LoginModal';\nimport {useState} from \"react\";\nimport LogoutModal from './components/LogoutModal';\nimport Tests from './components/Tests';\nimport PsyHome from './components/PsyHome';\n\nfunction App() {\n\n  const userLoggedIn = false;\n  const [showLoginModal, changeLoginModal] = useState(false);\n  const [showLogoutModal, changeLogoutModal] = useState(false);\n  const [signupModal, changeSignupModal] = useState(false);\n\n  const getSignupModal = () => {\n    changeLoginModal(false);\n    changeSignupModal(true);\n  }\n\n  const promptLogin = async (loginInfo) => {\n    console.log(\"Trying login\", loginInfo)\n\n    const res = await fetch('http://localhost:8000/login-info', \n      {\n        method: \"POST\", \n        headers: {'Content-type': 'application/json'}, \n        body: JSON.stringify(loginInfo)\n      }\n    )\n    const data = await res.json()\n\n  }\n\n\n  const [specificTests, changeSpecificTests] = useState([\n    {\n      id : 1,\n      testName : \"OCD Test\",\n      description : \"Suffering from obsessive thoughts of compulsive behavior? Take a tour to our OCD tests.\"\n    },\n    {\n      id : 2,\n      testName : \"PTSD Test\",\n      description : \"Any horrible course of events that are still terrifying you? Find out through our PTSD tests.\"\n    }\n  ])\n\n  return (\n    \n    <div>\n      <Header changeLoginModalFn={() => changeLoginModal(true)} loggedIn={userLoggedIn} cngLogoutModalFn={() => changeLogoutModal(true)}  />\n      \n      {userLoggedIn ? (<Tests tests={specificTests} />) : (<Talks changeModalFn={() => changeLoginModal(true)} />)}\n\n      {showLoginModal && <LoginModal onLogin={promptLogin} changeLoginModalFn={() => changeLoginModal(false)} cngSignupModalFn={getSignupModal} isSignUp={signupModal} />}\n\n      {showLogoutModal && <LogoutModal cngLogoutModalFn={() => changeLogoutModal(false)}/>}\n\n      {/* <PsyHome /> */}\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAMC,YAAY,GAAG,KAArB;EACA,MAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCP,QAAQ,CAAC,KAAD,CAAnD;EACA,MAAM,CAACQ,eAAD,EAAkBC,iBAAlB,IAAuCT,QAAQ,CAAC,KAAD,CAArD;EACA,MAAM,CAACU,WAAD,EAAcC,iBAAd,IAAmCX,QAAQ,CAAC,KAAD,CAAjD;;EAEA,MAAMY,cAAc,GAAG,MAAM;IAC3BL,gBAAgB,CAAC,KAAD,CAAhB;IACAI,iBAAiB,CAAC,IAAD,CAAjB;EACD,CAHD;;EAKA,MAAME,WAAW,GAAG,MAAOC,SAAP,IAAqB;IACvCC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,SAA5B;IAEA,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,EACrB;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFX;MAGEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf;IAHR,CADqB,CAAvB;IAOA,MAAMU,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;EAED,CAZD;;EAeA,MAAM,CAACC,aAAD,EAAgBC,mBAAhB,IAAuC3B,QAAQ,CAAC,CACpD;IACE4B,EAAE,EAAG,CADP;IAEEC,QAAQ,EAAG,UAFb;IAGEC,WAAW,EAAG;EAHhB,CADoD,EAMpD;IACEF,EAAE,EAAG,CADP;IAEEC,QAAQ,EAAG,WAFb;IAGEC,WAAW,EAAG;EAHhB,CANoD,CAAD,CAArD;EAaA,oBAEE;IAAA,wBACE,QAAC,MAAD;MAAQ,kBAAkB,EAAE,MAAMvB,gBAAgB,CAAC,IAAD,CAAlD;MAA0D,QAAQ,EAAEF,YAApE;MAAkF,gBAAgB,EAAE,MAAMI,iBAAiB,CAAC,IAAD;IAA3H;MAAA;MAAA;MAAA;IAAA,QADF,EAGGJ,YAAY,gBAAI,QAAC,KAAD;MAAO,KAAK,EAAEqB;IAAd;MAAA;MAAA;MAAA;IAAA,QAAJ,gBAAwC,QAAC,KAAD;MAAO,aAAa,EAAE,MAAMnB,gBAAgB,CAAC,IAAD;IAA5C;MAAA;MAAA;MAAA;IAAA,QAHvD,EAKGD,cAAc,iBAAI,QAAC,UAAD;MAAY,OAAO,EAAEO,WAArB;MAAkC,kBAAkB,EAAE,MAAMN,gBAAgB,CAAC,KAAD,CAA5E;MAAqF,gBAAgB,EAAEK,cAAvG;MAAuH,QAAQ,EAAEF;IAAjI;MAAA;MAAA;MAAA;IAAA,QALrB,EAOGF,eAAe,iBAAI,QAAC,WAAD;MAAa,gBAAgB,EAAE,MAAMC,iBAAiB,CAAC,KAAD;IAAtD;MAAA;MAAA;MAAA;IAAA,QAPtB,eAWE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAgBD;;GAxDQL,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}