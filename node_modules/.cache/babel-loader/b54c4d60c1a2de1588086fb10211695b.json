{"ast":null,"code":"var _jsxFileName = \"/home/fahim_hakim_15/WebstormProjects/HAY-Front-End/src/components/Questionnaire.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Questions.css\";\nimport ReactDOM from 'react-dom';\nimport { questionnaire_post_response } from \"./Variables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst callRestApi = async restEndpoint => {\n  const response = await fetch(restEndpoint, {\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/vnd.api+json'\n    }\n  });\n  console.log(response);\n  const jsonResponse = await response.json(); // console.log(jsonResponse.data.relationships.questions.data);\n\n  return jsonResponse;\n};\n\nconst callRestApiForPost = async (restEndpoint, message_body) => {\n  const response = await fetch(restEndpoint, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/vnd.api+json',\n      'Content-Type': 'application/vnd.api+json'\n    },\n    body: message_body\n  });\n  console.log(response);\n  const jsonResponse = await response.json(); // console.log(jsonResponse.data.relationships.questions.data);\n\n  return jsonResponse;\n};\n\nvar options = {};\nexport function OptionText(props) {\n  _s();\n\n  const restEndPoint = '/api/options/' + props.optionId;\n  const [apiResponse, setApiResponse] = useState({\n    option_text: \"not loaded yet\",\n    option_id: 0\n  });\n  useEffect(() => {\n    callRestApi(restEndPoint).then(result => setApiResponse({\n      option_text: result.data.attributes.option_text,\n      option_id: result.data.attributes.option_id\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check form-check-inline\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      className: \"radio\",\n      name: props.questionId,\n      value: apiResponse.option_id,\n      onClick: () => {\n        options[props.questionId] = props.optionId;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"inlineRadio1\",\n      children: apiResponse.option_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_s(OptionText, \"xDN4+ukbfQ72cOzXGpYLTaQYi5g=\");\n\n_c = OptionText;\nexport function ListOptionsOfAQuestion(props) {\n  _s2();\n\n  console.log('props', props);\n  const restEndPoint = '/api/questions/' + props.questionId;\n  const [apiResponse, setApiResponse] = useState({\n    question_text: \"not loaded yet\",\n    question_id: 0,\n    options: []\n  });\n  useEffect(() => {\n    callRestApi(restEndPoint).then(result => setApiResponse({\n      question_text: result.data.attributes.question_text,\n      question_id: result.data.attributes.question_id,\n      options: result.data.relationships.options.data.sort((a, b) => a.id - b.id)\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionTextContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionId\",\n        children: [\" \", props.key_id, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionText\",\n        children: apiResponse.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionContainer\",\n      children: apiResponse.options.map((option, idx) => /*#__PURE__*/_jsxDEV(OptionText, {\n        optionId: option.id,\n        questionId: apiResponse.question_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ListOptionsOfAQuestion, \"5K2IFRZWkjBOx2xSo6vqVWN5ppE=\");\n\n_c2 = ListOptionsOfAQuestion;\nexport function ListQuestionsOfATest(props) {\n  _s3();\n\n  const restEndPoint = '/api/tests/' + props.testId;\n  const [apiResponse, setApiResponse] = useState({\n    test_name: \"not loaded yet\",\n    test_description: \"not loaded yet\",\n    test_id: 0,\n    questions: []\n  });\n  useEffect(() => {\n    callRestApi(restEndPoint).then(result => setApiResponse({\n      test_name: result.data.attributes.name,\n      test_description: result.data.attributes.description,\n      test_id: result.data.test_id,\n      questions: result.data.relationships.questions.data.sort((a, b) => a.id - b.id)\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Test Name: \", apiResponse.test_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Test Description: \", apiResponse.test_description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: apiResponse.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(ListOptionsOfAQuestion, {\n        questionId: question.id,\n        key_id: idx + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 59\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"login-btn-modal\",\n      value: \"Submit\",\n      style: {\n        width: '10%'\n      },\n      onClick: () => {\n        console.log(\"Options: \", options);\n        const post_response = questionnaire_post_response(props.testId, options);\n        console.log(post_response);\n        callRestApiForPost('http://localhost:5000/api/tr', post_response).then(r => {\n          console.log(r);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ListQuestionsOfATest, \"/WFNJWSTcii+W1qsbDAwFrvSeGA=\");\n\n_c3 = ListQuestionsOfATest;\n;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OptionText\");\n$RefreshReg$(_c2, \"ListOptionsOfAQuestion\");\n$RefreshReg$(_c3, \"ListQuestionsOfATest\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","questionnaire_post_response","callRestApi","restEndpoint","response","fetch","method","headers","console","log","jsonResponse","json","callRestApiForPost","message_body","body","options","OptionText","props","restEndPoint","optionId","apiResponse","setApiResponse","option_text","option_id","then","result","data","attributes","questionId","ListOptionsOfAQuestion","question_text","question_id","relationships","sort","a","b","id","key_id","map","option","idx","ListQuestionsOfATest","testId","test_name","test_description","test_id","questions","name","description","question","width","post_response","r"],"sources":["/home/fahim_hakim_15/WebstormProjects/HAY-Front-End/src/components/Questionnaire.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport \"./Questions.css\"\nimport ReactDOM from 'react-dom';\nimport {questionnaire_post_response} from \"./Variables\";\n\nconst callRestApi = async (restEndpoint) => {\n    const response = await fetch(restEndpoint, {method: \"GET\", headers: {'Accept': 'application/vnd.api+json'}});\n    console.log(response)\n    const jsonResponse = await response.json();\n    // console.log(jsonResponse.data.relationships.questions.data);\n    return jsonResponse;\n};\n\nconst callRestApiForPost = async (restEndpoint, message_body) => {\n    const response = await fetch(restEndpoint, {\n        method: \"POST\", headers: {'Accept': 'application/vnd.api+json'\n            , 'Content-Type': 'application/vnd.api+json'}\n        , body: message_body});\n    console.log(response)\n    const jsonResponse = await response.json();\n    // console.log(jsonResponse.data.relationships.questions.data);\n    return jsonResponse;\n};\n\nvar options = {}\n\n\nexport function OptionText(props) {\n\n    const restEndPoint = '/api/options/' + props.optionId;\n\n    const [apiResponse, setApiResponse] = useState({\n        option_text: \"not loaded yet\",\n        option_id: 0\n    });\n\n     useEffect(() => {\n        callRestApi(restEndPoint).then(\n            result => setApiResponse({\n                option_text: result.data.attributes.option_text,\n                option_id: result.data.attributes.option_id\n            }));\n    }, []);\n\n     return (\n         <div className=\"form-check form-check-inline\">\n             <input className=\"form-check-input\" type=\"radio\" className='radio' name={props.questionId} value={apiResponse.option_id}\n                onClick={() => {options[props.questionId] = props.optionId}}/>\n                 <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">{apiResponse.option_text}</label>\n         </div>\n\n    );\n}\n\nexport function ListOptionsOfAQuestion(props) {\n    console.log('props', props)\n\n    const restEndPoint = '/api/questions/' + props.questionId;\n\n    const [apiResponse, setApiResponse] = useState({\n        question_text: \"not loaded yet\",\n        question_id: 0,\n        options: []\n    });\n\n     useEffect(() => {\n        callRestApi(restEndPoint).then(\n            result => setApiResponse({\n                question_text: result.data.attributes.question_text,\n                question_id: result.data.attributes.question_id,\n                options: result.data.relationships.options.data.sort((a, b) => a.id - b.id)\n            }));\n    }, []);\n\n     return (\n        <div>\n            <div className='questionTextContainer'>\n                <div className='questionId'> {props.key_id}.</div>\n                <div className='questionText'>{apiResponse.question_text}</div>\n            </div>\n            <div className='optionContainer'>\n            {apiResponse.options.map((option, idx) => <OptionText optionId={option.id} questionId={apiResponse.question_id}/>)}\n            </div>\n            <br/>\n        </div>\n    );\n}\n\nexport function ListQuestionsOfATest(props) {\n\n    const restEndPoint = '/api/tests/' + props.testId;\n\n    const [apiResponse, setApiResponse] = useState({\n        test_name: \"not loaded yet\",\n        test_description: \"not loaded yet\",\n        test_id: 0,\n        questions: []\n    });\n\n    useEffect(() => {\n        callRestApi(restEndPoint).then(\n            result => setApiResponse({\n                test_name: result.data.attributes.name,\n                test_description: result.data.attributes.description,\n                test_id: result.data.test_id,\n                questions: result.data.relationships.questions.data.sort((a, b) => a.id - b.id)\n            }));\n    }, []);\n\n    return (\n        <div className='container'>\n            <h1>Test Name: {apiResponse.test_name}</h1>\n            <p>Test Description: {apiResponse.test_description}</p>\n            <form >\n            {apiResponse.questions.map((question, idx) => <ListOptionsOfAQuestion\n                questionId={question.id} key_id={idx+1}/>)}\n            </form>\n\n            <input type=\"submit\" className=\"login-btn-modal\" value=\"Submit\" style={{width: '10%'}}\n                onClick={() => {\n                    console.log(\"Options: \", options);\n                    const post_response = questionnaire_post_response(props.testId, options);\n                    console.log(post_response);\n                    callRestApiForPost('http://localhost:5000/api/tr', post_response).then(r => {console.log(r)});\n                }}/>\n        </div>\n    );\n};"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,2BAAR,QAA0C,aAA1C;;;AAEA,MAAMC,WAAW,GAAG,MAAOC,YAAP,IAAwB;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAD,EAAe;IAACG,MAAM,EAAE,KAAT;IAAgBC,OAAO,EAAE;MAAC,UAAU;IAAX;EAAzB,CAAf,CAA5B;EACAC,OAAO,CAACC,GAAR,CAAYL,QAAZ;EACA,MAAMM,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B,CAHwC,CAIxC;;EACA,OAAOD,YAAP;AACH,CAND;;AAQA,MAAME,kBAAkB,GAAG,OAAOT,YAAP,EAAqBU,YAArB,KAAsC;EAC7D,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAD,EAAe;IACvCG,MAAM,EAAE,MAD+B;IACvBC,OAAO,EAAE;MAAC,UAAU,0BAAX;MACnB,gBAAgB;IADG,CADc;IAGrCO,IAAI,EAAED;EAH+B,CAAf,CAA5B;EAIAL,OAAO,CAACC,GAAR,CAAYL,QAAZ;EACA,MAAMM,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B,CAN6D,CAO7D;;EACA,OAAOD,YAAP;AACH,CATD;;AAWA,IAAIK,OAAO,GAAG,EAAd;AAGA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE9B,MAAMC,YAAY,GAAG,kBAAkBD,KAAK,CAACE,QAA7C;EAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC;IAC3CuB,WAAW,EAAE,gBAD8B;IAE3CC,SAAS,EAAE;EAFgC,CAAD,CAA9C;EAKCzB,SAAS,CAAC,MAAM;IACbI,WAAW,CAACgB,YAAD,CAAX,CAA0BM,IAA1B,CACIC,MAAM,IAAIJ,cAAc,CAAC;MACrBC,WAAW,EAAEG,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBL,WADf;MAErBC,SAAS,EAAEE,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBJ;IAFb,CAAD,CAD5B;EAKH,CANS,EAMP,EANO,CAAT;EAQA,oBACI;IAAK,SAAS,EAAC,8BAAf;IAAA,wBACI;MAAO,SAAS,EAAC,kBAAjB;MAAoC,IAAI,EAAC,OAAzC;MAAiD,SAAS,EAAC,OAA3D;MAAmE,IAAI,EAAEN,KAAK,CAACW,UAA/E;MAA2F,KAAK,EAAER,WAAW,CAACG,SAA9G;MACG,OAAO,EAAE,MAAM;QAACR,OAAO,CAACE,KAAK,CAACW,UAAP,CAAP,GAA4BX,KAAK,CAACE,QAAlC;MAA2C;IAD9D;MAAA;MAAA;MAAA;IAAA,QADJ,eAGQ;MAAO,SAAS,EAAC,kBAAjB;MAAoC,OAAO,EAAC,cAA5C;MAAA,UAA4DC,WAAW,CAACE;IAAxE;MAAA;MAAA;MAAA;IAAA,QAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQJ;;GAzBeN,U;;KAAAA,U;AA2BhB,OAAO,SAASa,sBAAT,CAAgCZ,KAAhC,EAAuC;EAAA;;EAC1CT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB;EAEA,MAAMC,YAAY,GAAG,oBAAoBD,KAAK,CAACW,UAA/C;EAEA,MAAM,CAACR,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC;IAC3C+B,aAAa,EAAE,gBAD4B;IAE3CC,WAAW,EAAE,CAF8B;IAG3ChB,OAAO,EAAE;EAHkC,CAAD,CAA9C;EAMCjB,SAAS,CAAC,MAAM;IACbI,WAAW,CAACgB,YAAD,CAAX,CAA0BM,IAA1B,CACIC,MAAM,IAAIJ,cAAc,CAAC;MACrBS,aAAa,EAAEL,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBG,aADjB;MAErBC,WAAW,EAAEN,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBI,WAFf;MAGrBhB,OAAO,EAAEU,MAAM,CAACC,IAAP,CAAYM,aAAZ,CAA0BjB,OAA1B,CAAkCW,IAAlC,CAAuCO,IAAvC,CAA4C,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAA/D;IAHY,CAAD,CAD5B;EAMH,CAPS,EAOP,EAPO,CAAT;EASA,oBACG;IAAA,wBACI;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,YAAf;QAAA,gBAA8BnB,KAAK,CAACoB,MAApC;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,cAAf;QAAA,UAA+BjB,WAAW,CAACU;MAA3C;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,iBAAf;MAAA,UACCV,WAAW,CAACL,OAAZ,CAAoBuB,GAApB,CAAwB,CAACC,MAAD,EAASC,GAAT,kBAAiB,QAAC,UAAD;QAAY,QAAQ,EAAED,MAAM,CAACH,EAA7B;QAAiC,UAAU,EAAEhB,WAAW,CAACW;MAAzD;QAAA;QAAA;QAAA;MAAA,QAAzC;IADD;MAAA;MAAA;MAAA;IAAA,QALJ,eAQI;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAYJ;;IAhCeF,sB;;MAAAA,sB;AAkChB,OAAO,SAASY,oBAAT,CAA8BxB,KAA9B,EAAqC;EAAA;;EAExC,MAAMC,YAAY,GAAG,gBAAgBD,KAAK,CAACyB,MAA3C;EAEA,MAAM,CAACtB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC;IAC3C4C,SAAS,EAAE,gBADgC;IAE3CC,gBAAgB,EAAE,gBAFyB;IAG3CC,OAAO,EAAE,CAHkC;IAI3CC,SAAS,EAAE;EAJgC,CAAD,CAA9C;EAOAhD,SAAS,CAAC,MAAM;IACZI,WAAW,CAACgB,YAAD,CAAX,CAA0BM,IAA1B,CACIC,MAAM,IAAIJ,cAAc,CAAC;MACrBsB,SAAS,EAAElB,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBoB,IADb;MAErBH,gBAAgB,EAAEnB,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuBqB,WAFpB;MAGrBH,OAAO,EAAEpB,MAAM,CAACC,IAAP,CAAYmB,OAHA;MAIrBC,SAAS,EAAErB,MAAM,CAACC,IAAP,CAAYM,aAAZ,CAA0Bc,SAA1B,CAAoCpB,IAApC,CAAyCO,IAAzC,CAA8C,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAjE;IAJU,CAAD,CAD5B;EAOH,CARQ,EAQN,EARM,CAAT;EAUA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA,0BAAgBhB,WAAW,CAACuB,SAA5B;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,iCAAsBvB,WAAW,CAACwB,gBAAlC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UACCxB,WAAW,CAAC0B,SAAZ,CAAsBR,GAAtB,CAA0B,CAACW,QAAD,EAAWT,GAAX,kBAAmB,QAAC,sBAAD;QAC1C,UAAU,EAAES,QAAQ,CAACb,EADqB;QACjB,MAAM,EAAEI,GAAG,GAAC;MADK;QAAA;QAAA;QAAA;MAAA,QAA7C;IADD;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MAAO,IAAI,EAAC,QAAZ;MAAqB,SAAS,EAAC,iBAA/B;MAAiD,KAAK,EAAC,QAAvD;MAAgE,KAAK,EAAE;QAACU,KAAK,EAAE;MAAR,CAAvE;MACI,OAAO,EAAE,MAAM;QACX1C,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,OAAzB;QACA,MAAMoC,aAAa,GAAGlD,2BAA2B,CAACgB,KAAK,CAACyB,MAAP,EAAe3B,OAAf,CAAjD;QACAP,OAAO,CAACC,GAAR,CAAY0C,aAAZ;QACAvC,kBAAkB,CAAC,8BAAD,EAAiCuC,aAAjC,CAAlB,CAAkE3B,IAAlE,CAAuE4B,CAAC,IAAI;UAAC5C,OAAO,CAACC,GAAR,CAAY2C,CAAZ;QAAe,CAA5F;MACH;IANL;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;IAvCeX,oB;;MAAAA,oB;AAuCf"},"metadata":{},"sourceType":"module"}