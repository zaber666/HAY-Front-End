{"ast":null,"code":"var _jsxFileName = \"/home/zaber666/CSE 408/project/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Talks from './components/Talks';\nimport Footer from './components/Footer';\nimport LoginModal from './components/LoginModal';\nimport { useState, useEffect } from \"react\";\nimport LogoutModal from './components/LogoutModal';\nimport Tests from './components/Tests';\nimport PsyHome from './components/PsyHome';\nimport Questions from './components/Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const userLoggedIn = false;\n  const [showLoginModal, changeLoginModal] = useState(false);\n  const [showLogoutModal, changeLogoutModal] = useState(false);\n  const [signupModal, changeSignupModal] = useState(false); // POST Request for login\n\n  const promptLogin = async loginInfo => {\n    const res = await fetch('http://localhost:8000/login-info', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(loginInfo)\n    });\n    const data = await res.json();\n  }; // POST request for sign up\n\n\n  const promptSignup = async signupInfo => {\n    const res = await fetch('http://localhost:8000/signup-info', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(signupInfo)\n    });\n    const data = await res.json();\n  };\n\n  const [specificTests, changeSpecificTests] = useState([{\n    id: 1,\n    testName: \"OCD Test\",\n    description: \"Suffering from obsessive thoughts of compulsive behavior? Take a tour to our OCD tests.\"\n  }, {\n    id: 2,\n    testName: \"PTSD Test\",\n    description: \"Any horrible course of events that are still terrifying you? Find out through our PTSD tests.\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changeLoginModalFn: () => changeLoginModal(true),\n      loggedIn: userLoggedIn,\n      cngLogoutModalFn: () => changeLogoutModal(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j1wbqsDgdbFfRqsmHzNpOufKtQ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Talks","Footer","LoginModal","useState","useEffect","LogoutModal","Tests","PsyHome","Questions","App","userLoggedIn","showLoginModal","changeLoginModal","showLogoutModal","changeLogoutModal","signupModal","changeSignupModal","promptLogin","loginInfo","res","fetch","method","headers","body","JSON","stringify","data","json","promptSignup","signupInfo","specificTests","changeSpecificTests","id","testName","description"],"sources":["/home/zaber666/CSE 408/project/front-end/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Talks from './components/Talks';\nimport Footer from './components/Footer';\nimport LoginModal from './components/LoginModal';\nimport {useState, useEffect} from \"react\";\nimport LogoutModal from './components/LogoutModal';\nimport Tests from './components/Tests';\nimport PsyHome from './components/PsyHome';\nimport Questions from './components/Questions';\n\nfunction App() {\n\n  const userLoggedIn = false;\n  const [showLoginModal, changeLoginModal] = useState(false);\n  const [showLogoutModal, changeLogoutModal] = useState(false);\n  const [signupModal, changeSignupModal] = useState(false);\n\n  // POST Request for login\n  const promptLogin = async (loginInfo) => {\n    const res = await fetch('http://localhost:8000/login-info', \n      {\n        method: \"POST\", \n        headers: {'Content-type': 'application/json'}, \n        body: JSON.stringify(loginInfo)\n      }\n    )\n    const data = await res.json()\n  }\n\n  // POST request for sign up\n  const promptSignup = async (signupInfo) => {\n    const res = await fetch('http://localhost:8000/signup-info', \n      {\n        method: \"POST\", \n        headers: {'Content-type': 'application/json'}, \n        body: JSON.stringify(signupInfo)\n      }\n    )\n    const data = await res.json()\n  }\n\n\n  const [specificTests, changeSpecificTests] = useState([\n    {\n      id : 1,\n      testName : \"OCD Test\",\n      description : \"Suffering from obsessive thoughts of compulsive behavior? Take a tour to our OCD tests.\"\n    },\n    {\n      id : 2,\n      testName : \"PTSD Test\",\n      description : \"Any horrible course of events that are still terrifying you? Find out through our PTSD tests.\"\n    }\n  ])\n\n  return (\n    \n    <div>\n      <Header changeLoginModalFn={() => changeLoginModal(true)} loggedIn={userLoggedIn} cngLogoutModalFn={() => changeLogoutModal(true)}  />\n      \n      {/* {userLoggedIn ? (<Tests tests={specificTests} />) : (<Talks changeModalFn={() => changeLoginModal(true)} />)}\n\n      {showLoginModal && <LoginModal onSignup={promptSignup} onLogin={promptLogin} changeLoginModalFn={() => changeLoginModal(false)} cngSignupModalFn={() => changeSignupModal(true)} closeSignupModalFn={() => changeSignupModal(false)} isSignUp={signupModal}  />}\n\n      {showLogoutModal && <LogoutModal cngLogoutModalFn={() => changeLogoutModal(false)}/>} */}\n\n      {/* <PsyHome /> */}\n\n      <Questions />\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAMC,YAAY,GAAG,KAArB;EACA,MAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCT,QAAQ,CAAC,KAAD,CAAnD;EACA,MAAM,CAACU,eAAD,EAAkBC,iBAAlB,IAAuCX,QAAQ,CAAC,KAAD,CAArD;EACA,MAAM,CAACY,WAAD,EAAcC,iBAAd,IAAmCb,QAAQ,CAAC,KAAD,CAAjD,CALa,CAOb;;EACA,MAAMc,WAAW,GAAG,MAAOC,SAAP,IAAqB;IACvC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,EACrB;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFX;MAGEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;IAHR,CADqB,CAAvB;IAOA,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;EACD,CATD,CARa,CAmBb;;;EACA,MAAMC,YAAY,GAAG,MAAOC,UAAP,IAAsB;IACzC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EACrB;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFX;MAGEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,UAAf;IAHR,CADqB,CAAvB;IAOA,MAAMH,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;EACD,CATD;;EAYA,MAAM,CAACG,aAAD,EAAgBC,mBAAhB,IAAuC5B,QAAQ,CAAC,CACpD;IACE6B,EAAE,EAAG,CADP;IAEEC,QAAQ,EAAG,UAFb;IAGEC,WAAW,EAAG;EAHhB,CADoD,EAMpD;IACEF,EAAE,EAAG,CADP;IAEEC,QAAQ,EAAG,WAFb;IAGEC,WAAW,EAAG;EAHhB,CANoD,CAAD,CAArD;EAaA,oBAEE;IAAA,wBACE,QAAC,MAAD;MAAQ,kBAAkB,EAAE,MAAMtB,gBAAgB,CAAC,IAAD,CAAlD;MAA0D,QAAQ,EAAEF,YAApE;MAAkF,gBAAgB,EAAE,MAAMI,iBAAiB,CAAC,IAAD;IAA3H;MAAA;MAAA;MAAA;IAAA,QADF,eAWE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAXF,eAaE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAkBD;;GA/DQL,G;;KAAAA,G;AAiET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}